@page "/error"
@page "/error/{code:int}"

@using System.Diagnostics

<PageTitle>Error</PageTitle>

<h1 class="text-danger">Ocorreu um erro</h1>
<h3 class="text-danger">@Message</h3>

@if (ShowRequestId)
{
    <p>
        <strong>Request ID:</strong> <code>@RequestId</code>
    </p>
}

<h3>Development Mode</h3>
<p>
    Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
</p>
<p>
    <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
    It can result in displaying sensitive information from exceptions to end users.
    For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
    and restarting the app.
</p>

@code {
    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }

    [Parameter]
    public int code { get; set; }

    private string? RequestId { get; set; }
    private bool ShowRequestId => !string.IsNullOrEmpty(RequestId);
    string Message = string.Empty;

    protected override void OnInitialized()
    {
        RequestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;

        switch (code)
        {
            case 401:
                Message = "Não te conheço";
                break;
            case 403:
                Message = "Te conheço mas você não tem acesso!";
                break;
            case 404:
                Message = "Página não encontrada";
                break;
            case 500:
                Message = "Erro no servidor";
                break;
            default:
                Message = "Erro desconhecido";
                break;
        }
    }
}
