@page "/produtos/excluir/{id:int}"

@using Microsoft.EntityFrameworkCore
@using BlazorApp.Components.Produtos

@inject IDbContextFactory<BlazorApp.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager


<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Produto</h4>
    <hr />
    @if (produto is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@produto.Nome</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Descricao</dt>
            <dd class="col-sm-10">@produto.Descricao</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Categoria</dt>
            <dd class="col-sm-10">@produto.Categoria</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Preco</dt>
            <dd class="col-sm-10">@produto.Preco</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DisponivelEstoque</dt>
            <dd class="col-sm-10">@produto.DisponivelEstoque</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DataValidade</dt>
            <dd class="col-sm-10">@produto.DataValidade</dd>
        </dl>
        <EditForm method="post" Model="produto" OnValidSubmit="DeleteProduto" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(produto is null)">Delete</button> |
            <a href="/produtos">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Produto? produto;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        produto = await context.Produto.FirstOrDefaultAsync(m => m.Id == Id);

        if (produto is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteProduto()
    {
        using var context = DbFactory.CreateDbContext();
        context.Produto.Remove(produto!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/produtos");
    }
}
